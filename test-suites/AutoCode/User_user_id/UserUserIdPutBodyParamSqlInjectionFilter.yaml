---
parent: User_user_id
name: UserUserIdPutBodyParamSqlInjectionFilter
description: null
authors:
- apisec Bot
type: SUITE
init: []
localVariables: []
path: /user/{user_id}
endpoint: /user/{{@Var.user_id}}
method: PUT
auth: Default
headers:
- 'Accept: application/json'
- 'Content-Type: application/json'
testCases:
- id: 1
  body: |-
    {
      "firstname" : "{{@Var.firstname}}",
      "lastname" : "{{@Var.lastname}}",
      "login" : "{{@Injection}}",
      "email" : "{{@Var.email}}",
      "password" : "{{@Var.password}}",
      "groups" : [ "{{@Random}}" ]
    }
  inactive: false
useCategoryAssertion: false
assertions:
- '@StatusCode != 404'
- '@ResponseTime < 7000'
cleanup: []
severity: Medium
category: sql_injection_filter
tags:
- V1
- OWASP A1
- '[PCI DSS 3.0] 6.5.1'
- OWASP - OTG-INPVAL-005
- FX Top 10 - API Vulnerability
- Intrusive
inactive: false
policies:
  initExec: Request
  cleanupExec: Request
  logger: DEBUG
  timeoutSeconds: 300
  repeatOnFailure: 0
  repeat: 0
  repeatModule: '@Default/Common/sql_injection_filter'
  repeatDelay: 0
  unmaskToken: false
  postExecutionDelay: 0
  showResponse: true
autoGenerated: true
